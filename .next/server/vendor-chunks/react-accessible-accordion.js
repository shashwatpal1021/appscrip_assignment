"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-accessible-accordion";
exports.ids = ["vendor-chunks/react-accessible-accordion"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-accessible-accordion/dist/es/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-accessible-accordion/dist/es/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Accordion: () => (/* binding */ Accordion),\n/* harmony export */   AccordionItem: () => (/* binding */ AccordionItem),\n/* harmony export */   AccordionItemButton: () => (/* binding */ AccordionItemButtonWrapper),\n/* harmony export */   AccordionItemHeading: () => (/* binding */ AccordionItemHeadingWrapper),\n/* harmony export */   AccordionItemPanel: () => (/* binding */ AccordionItemPanel),\n/* harmony export */   AccordionItemState: () => (/* binding */ AccordionItemState),\n/* harmony export */   resetNextUuid: () => (/* binding */ resetGlobalCounterId)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar AccordionStore = /*#__PURE__*/_createClass(function AccordionStore(_ref) {\n  var _this = this;\n\n  var _ref$expanded = _ref.expanded,\n      _expanded = _ref$expanded === void 0 ? [] : _ref$expanded,\n      _ref$allowMultipleExp = _ref.allowMultipleExpanded,\n      allowMultipleExpanded = _ref$allowMultipleExp === void 0 ? false : _ref$allowMultipleExp,\n      _ref$allowZeroExpande = _ref.allowZeroExpanded,\n      allowZeroExpanded = _ref$allowZeroExpande === void 0 ? false : _ref$allowZeroExpande;\n\n  _classCallCheck(this, AccordionStore);\n\n  _defineProperty(this, \"expanded\", void 0);\n\n  _defineProperty(this, \"allowMultipleExpanded\", void 0);\n\n  _defineProperty(this, \"allowZeroExpanded\", void 0);\n\n  _defineProperty(this, \"toggleExpanded\", function (uuid) {\n    if (_this.isItemDisabled(uuid)) {\n      return _this;\n    }\n\n    var isExpanded = _this.isItemExpanded(uuid);\n\n    if (!isExpanded) {\n      return _this.augment({\n        expanded: _this.allowMultipleExpanded ? [].concat(_toConsumableArray(_this.expanded), [uuid]) : [uuid]\n      });\n    } else {\n      return _this.augment({\n        expanded: _this.expanded.filter(function (expandedUuid) {\n          return expandedUuid !== uuid;\n        })\n      });\n    }\n  });\n\n  _defineProperty(this, \"isItemDisabled\", function (uuid) {\n    var isExpanded = _this.isItemExpanded(uuid);\n\n    var isOnlyOneExpanded = _this.expanded.length === 1;\n    return Boolean(isExpanded && !_this.allowZeroExpanded && isOnlyOneExpanded);\n  });\n\n  _defineProperty(this, \"isItemExpanded\", function (uuid) {\n    return _this.expanded.indexOf(uuid) !== -1;\n  });\n\n  _defineProperty(this, \"getPanelAttributes\", function (uuid, dangerouslySetExpanded) {\n    var expanded = dangerouslySetExpanded !== null && dangerouslySetExpanded !== void 0 ? dangerouslySetExpanded : _this.isItemExpanded(uuid);\n    return {\n      role: _this.allowMultipleExpanded ? undefined : 'region',\n      'aria-hidden': _this.allowMultipleExpanded ? !expanded : undefined,\n      'aria-labelledby': _this.getButtonId(uuid),\n      id: _this.getPanelId(uuid),\n      hidden: expanded ? undefined : true\n    };\n  });\n\n  _defineProperty(this, \"getHeadingAttributes\", function () {\n    return {\n      role: 'heading'\n    };\n  });\n\n  _defineProperty(this, \"getButtonAttributes\", function (uuid, dangerouslySetExpanded) {\n    var expanded = dangerouslySetExpanded !== null && dangerouslySetExpanded !== void 0 ? dangerouslySetExpanded : _this.isItemExpanded(uuid);\n\n    var disabled = _this.isItemDisabled(uuid);\n\n    return {\n      id: _this.getButtonId(uuid),\n      'aria-disabled': disabled,\n      'aria-expanded': expanded,\n      'aria-controls': _this.getPanelId(uuid),\n      role: 'button',\n      tabIndex: 0\n    };\n  });\n\n  _defineProperty(this, \"getPanelId\", function (id) {\n    return \"accordion__panel-\".concat(id);\n  });\n\n  _defineProperty(this, \"getButtonId\", function (id) {\n    return \"accordion__heading-\".concat(id);\n  });\n\n  _defineProperty(this, \"augment\", function (args) {\n    return new AccordionStore(_objectSpread2({\n      expanded: _this.expanded,\n      allowMultipleExpanded: _this.allowMultipleExpanded,\n      allowZeroExpanded: _this.allowZeroExpanded\n    }, args));\n  });\n\n  this.expanded = _expanded;\n  this.allowMultipleExpanded = allowMultipleExpanded;\n  this.allowZeroExpanded = allowZeroExpanded;\n});\n\nvar Context = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nvar Provider = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Provider, _React$PureComponent);\n\n  var _super = _createSuper(Provider);\n\n  function Provider() {\n    var _this;\n\n    _classCallCheck(this, Provider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", new AccordionStore({\n      expanded: _this.props.preExpanded,\n      allowMultipleExpanded: _this.props.allowMultipleExpanded,\n      allowZeroExpanded: _this.props.allowZeroExpanded\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleExpanded\", function (key) {\n      _this.setState(function (state) {\n        return state.toggleExpanded(key);\n      }, function () {\n        if (_this.props.onChange) {\n          _this.props.onChange(_this.state.expanded);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isItemDisabled\", function (key) {\n      return _this.state.isItemDisabled(key);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isItemExpanded\", function (key) {\n      return _this.state.isItemExpanded(key);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPanelAttributes\", function (key, dangerouslySetExpanded) {\n      return _this.state.getPanelAttributes(key, dangerouslySetExpanded);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getHeadingAttributes\", function () {\n      // uuid: UUID\n      return _this.state.getHeadingAttributes();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getButtonAttributes\", function (key, dangerouslySetExpanded) {\n      return _this.state.getButtonAttributes(key, dangerouslySetExpanded);\n    });\n\n    return _this;\n  }\n\n  _createClass(Provider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          allowZeroExpanded = _this$state.allowZeroExpanded,\n          allowMultipleExpanded = _this$state.allowMultipleExpanded;\n      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Context.Provider, {\n        value: {\n          allowMultipleExpanded: allowMultipleExpanded,\n          allowZeroExpanded: allowZeroExpanded,\n          toggleExpanded: this.toggleExpanded,\n          isItemDisabled: this.isItemDisabled,\n          isItemExpanded: this.isItemExpanded,\n          getPanelAttributes: this.getPanelAttributes,\n          getHeadingAttributes: this.getHeadingAttributes,\n          getButtonAttributes: this.getButtonAttributes\n        }\n      }, this.props.children || null);\n    }\n  }]);\n\n  return Provider;\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n\n_defineProperty(Provider, \"defaultProps\", {\n  allowMultipleExpanded: false,\n  allowZeroExpanded: false\n});\n\nvar Consumer = /*#__PURE__*/function (_React$PureComponent2) {\n  _inherits(Consumer, _React$PureComponent2);\n\n  var _super2 = _createSuper(Consumer);\n\n  function Consumer() {\n    var _this2;\n\n    _classCallCheck(this, Consumer);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"renderChildren\", function (container) {\n      return container ? _this2.props.children(container) : null;\n    });\n\n    return _this2;\n  }\n\n  _createClass(Consumer, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Context.Consumer, null, this.renderChildren);\n    }\n  }]);\n\n  return Consumer;\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n\nvar _excluded = [\"className\", \"allowMultipleExpanded\", \"allowZeroExpanded\", \"onChange\", \"preExpanded\"];\n\nvar Accordion = function Accordion(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'accordion' : _ref$className,\n      allowMultipleExpanded = _ref.allowMultipleExpanded,\n      allowZeroExpanded = _ref.allowZeroExpanded,\n      onChange = _ref.onChange,\n      preExpanded = _ref.preExpanded,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Provider, {\n    preExpanded: preExpanded,\n    allowMultipleExpanded: allowMultipleExpanded,\n    allowZeroExpanded: allowZeroExpanded,\n    onChange: onChange\n  }, /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", _extends({\n    \"data-accordion-component\": \"Accordion\",\n    className: className\n  }, rest)));\n};\n\nvar DisplayName;\n\n(function (DisplayName) {\n  DisplayName[\"Accordion\"] = \"Accordion\";\n  DisplayName[\"AccordionItem\"] = \"AccordionItem\";\n  DisplayName[\"AccordionItemButton\"] = \"AccordionItemButton\";\n  DisplayName[\"AccordionItemHeading\"] = \"AccordionItemHeading\";\n  DisplayName[\"AccordionItemPanel\"] = \"AccordionItemPanel\";\n})(DisplayName || (DisplayName = {}));\n\nvar DisplayName$1 = DisplayName;\n\n// @ts-ignore\nvar DEFAULT = 0;\nvar counter = 0;\nfunction useGlobalCounterId() {\n  var current = counter;\n  counter = counter + 1;\n  return \"raa-\".concat(current);\n}\nfunction resetGlobalCounterId() {\n  counter = DEFAULT;\n}\nvar useNextId = react__WEBPACK_IMPORTED_MODULE_0__.useId || useGlobalCounterId; // HTML5 ids allow all unicode characters, except for ASCII whitespaces\n// https://infra.spec.whatwg.org/#ascii-whitespace\n// eslint-disable-next-line no-control-regex\n\nvar idRegex = /[\\u0009\\u000a\\u000c\\u000d\\u0020]/g;\nfunction assertValidHtmlId(htmlId) {\n  if (htmlId === '' || idRegex.test(htmlId)) {\n    console.error(\"uuid must be a valid HTML5 id but was given \\\"\".concat(htmlId, \"\\\", ASCII whitespaces are forbidden\"));\n    return false;\n  }\n\n  return true;\n}\n\nvar Context$1 = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\n\nvar Provider$1 = function Provider(_ref) {\n  var children = _ref.children,\n      uuid = _ref.uuid,\n      accordionContext = _ref.accordionContext,\n      dangerouslySetExpanded = _ref.dangerouslySetExpanded;\n\n  var toggleExpanded = function toggleExpanded() {\n    accordionContext.toggleExpanded(uuid);\n  };\n\n  var renderChildren = function renderChildren(accordionContext) {\n    var expanded = dangerouslySetExpanded !== null && dangerouslySetExpanded !== void 0 ? dangerouslySetExpanded : accordionContext.isItemExpanded(uuid);\n    var disabled = accordionContext.isItemDisabled(uuid);\n    var panelAttributes = accordionContext.getPanelAttributes(uuid, dangerouslySetExpanded);\n    var headingAttributes = accordionContext.getHeadingAttributes(uuid);\n    var buttonAttributes = accordionContext.getButtonAttributes(uuid, dangerouslySetExpanded);\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Context$1.Provider, {\n      value: {\n        uuid: uuid,\n        expanded: expanded,\n        disabled: disabled,\n        toggleExpanded: toggleExpanded,\n        panelAttributes: panelAttributes,\n        headingAttributes: headingAttributes,\n        buttonAttributes: buttonAttributes\n      }\n    }, children);\n  };\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Consumer, null, renderChildren);\n};\n\nvar ProviderWrapper = function ProviderWrapper(props) {\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Consumer, null, function (accordionContext) {\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Provider$1, _extends({}, props, {\n      accordionContext: accordionContext\n    }));\n  });\n};\nvar Consumer$1 = function Consumer(_ref2) {\n  var children = _ref2.children;\n\n  var renderChildren = function renderChildren(container) {\n    return container ? children(container) : null;\n  };\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Context$1.Consumer, null, renderChildren);\n};\n\nvar _excluded$1 = [\"uuid\", \"dangerouslySetExpanded\", \"className\", \"activeClassName\"];\n\nvar AccordionItem = function AccordionItem(_ref) {\n  var customUuid = _ref.uuid,\n      dangerouslySetExpanded = _ref.dangerouslySetExpanded,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'accordion__item' : _ref$className,\n      activeClassName = _ref.activeClassName,\n      rest = _objectWithoutProperties(_ref, _excluded$1);\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(useNextId()),\n      _useState2 = _slicedToArray(_useState, 1),\n      instanceUuid = _useState2[0];\n\n  var uuid = customUuid !== null && customUuid !== void 0 ? customUuid : instanceUuid;\n\n  var renderChildren = function renderChildren(itemContext) {\n    var expanded = itemContext.expanded;\n    var cx = expanded && activeClassName ? activeClassName : className;\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", _extends({\n      \"data-accordion-component\": \"AccordionItem\",\n      className: cx\n    }, rest));\n  };\n\n  assertValidHtmlId(uuid.toString());\n\n  if (rest.id) {\n    assertValidHtmlId(rest.id);\n  }\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ProviderWrapper, {\n    uuid: uuid,\n    dangerouslySetExpanded: dangerouslySetExpanded\n  }, /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Consumer$1, null, renderChildren));\n};\n\nAccordionItem.displayName = DisplayName$1.AccordionItem;\n\nfunction getClosestAccordion(el) {\n  return el && (el.matches('[data-accordion-component=\"Accordion\"]') ? el : getClosestAccordion(el.parentElement));\n}\nfunction getSiblingButtons(item) {\n  var parentAccordion = getClosestAccordion(item);\n  return parentAccordion && Array.from(parentAccordion.querySelectorAll('[data-accordion-component=\"AccordionItemButton\"]'));\n}\nfunction focusFirstSiblingOf(item) {\n  var siblings = getSiblingButtons(item) || [];\n  var first = siblings[0];\n\n  if (first) {\n    first.focus();\n  }\n}\nfunction focusLastSiblingOf(item) {\n  var siblings = getSiblingButtons(item) || [];\n  var last = siblings[siblings.length - 1];\n\n  if (last) {\n    last.focus();\n  }\n}\nfunction focusNextSiblingOf(item) {\n  var siblings = getSiblingButtons(item) || [];\n  var currentIndex = siblings.indexOf(item);\n\n  if (currentIndex !== -1) {\n    var next = siblings[currentIndex + 1];\n\n    if (next) {\n      next.focus();\n    }\n  }\n}\nfunction focusPreviousSiblingOf(item) {\n  var siblings = getSiblingButtons(item) || [];\n  var currentIndex = siblings.indexOf(item);\n\n  if (currentIndex !== -1) {\n    var previous = siblings[currentIndex - 1];\n\n    if (previous) {\n      previous.focus();\n    }\n  }\n}\n\nvar keycodes = {\n  END: 'End',\n  ENTER: 'Enter',\n  HOME: 'Home',\n  SPACE: ' ',\n  SPACE_DEPRECATED: 'Spacebar',\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight'\n};\n\nvar _excluded$2 = [\"toggleExpanded\", \"className\"];\n\nvar AccordionItemButton = function AccordionItemButton(_ref) {\n  var toggleExpanded = _ref.toggleExpanded,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'accordion__button' : _ref$className,\n      rest = _objectWithoutProperties(_ref, _excluded$2);\n\n  var handleKeyPress = function handleKeyPress(evt) {\n    var keyCode = evt.key;\n\n    if (keyCode === keycodes.ENTER || keyCode === keycodes.SPACE || keyCode === keycodes.SPACE_DEPRECATED) {\n      evt.preventDefault();\n      toggleExpanded();\n    }\n    /* The following block is ignored from test coverage because at time\n     * time of writing Jest/react-testing-library can not assert 'focus'\n     * functionality.\n     */\n    // istanbul ignore next\n\n\n    if (evt.target instanceof HTMLElement) {\n      switch (keyCode) {\n        case keycodes.HOME:\n          {\n            evt.preventDefault();\n            focusFirstSiblingOf(evt.target);\n            break;\n          }\n\n        case keycodes.END:\n          {\n            evt.preventDefault();\n            focusLastSiblingOf(evt.target);\n            break;\n          }\n\n        case keycodes.LEFT:\n        case keycodes.UP:\n          {\n            evt.preventDefault();\n            focusPreviousSiblingOf(evt.target);\n            break;\n          }\n\n        case keycodes.RIGHT:\n        case keycodes.DOWN:\n          {\n            evt.preventDefault();\n            focusNextSiblingOf(evt.target);\n            break;\n          }\n      }\n    }\n  };\n\n  if (rest.id) {\n    assertValidHtmlId(rest.id);\n  }\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", _extends({\n    className: className\n  }, rest, {\n    role: \"button\",\n    tabIndex: 0,\n    onClick: toggleExpanded,\n    onKeyDown: handleKeyPress,\n    \"data-accordion-component\": \"AccordionItemButton\"\n  }));\n};\n\nvar AccordionItemButtonWrapper = function AccordionItemButtonWrapper(props) {\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Consumer$1, null, function (itemContext) {\n    var toggleExpanded = itemContext.toggleExpanded,\n        buttonAttributes = itemContext.buttonAttributes;\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AccordionItemButton, _extends({\n      toggleExpanded: toggleExpanded\n    }, props, buttonAttributes));\n  });\n};\n\nvar defaultProps = {\n  className: 'accordion__heading',\n  'aria-level': 3\n};\nvar SPEC_ERROR = \"AccordionItemButton may contain only one child element, which must be an instance of AccordionItemButton.\\n\\nFrom the WAI-ARIA spec (https://www.w3.org/TR/wai-aria-practices-1.1/#accordion):\\n\\n\\u201CThe button element is the only element inside the heading element. That is, if there are other visually persistent elements, they are not included inside the heading element.\\u201D\\n\\n\";\nvar AccordionItemHeading = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AccordionItemHeading, _React$PureComponent);\n\n  var _super = _createSuper(AccordionItemHeading);\n\n  function AccordionItemHeading() {\n    var _this;\n\n    _classCallCheck(this, AccordionItemHeading);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setRef\", function (ref) {\n      _this.ref = ref;\n    });\n\n    return _this;\n  }\n\n  _createClass(AccordionItemHeading, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      AccordionItemHeading.VALIDATE(this.ref);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AccordionItemHeading.VALIDATE(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", _extends({\n        \"data-accordion-component\": \"AccordionItemHeading\"\n      }, this.props, {\n        ref: this.setRef\n      }));\n    }\n  }], [{\n    key: \"VALIDATE\",\n    value: function VALIDATE(ref) {\n      if (ref === undefined) {\n        throw new Error('ref is undefined');\n      }\n\n      if (!(ref.childElementCount === 1 && ref.firstElementChild && ref.firstElementChild.getAttribute('data-accordion-component') === 'AccordionItemButton')) {\n        throw new Error(SPEC_ERROR);\n      }\n    }\n  }]);\n\n  return AccordionItemHeading;\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n\n_defineProperty(AccordionItemHeading, \"defaultProps\", defaultProps);\n\nvar AccordionItemHeadingWrapper = function AccordionItemHeadingWrapper(props) {\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Consumer$1, null, function (itemContext) {\n    var headingAttributes = itemContext.headingAttributes;\n\n    if (props.id) {\n      assertValidHtmlId(props.id);\n    }\n\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(AccordionItemHeading, _extends({}, props, headingAttributes));\n  });\n};\n\nAccordionItemHeadingWrapper.displayName = DisplayName$1.AccordionItemHeading;\n\nvar _excluded$3 = [\"className\", \"region\", \"id\"];\n\nvar AccordionItemPanel = function AccordionItemPanel(_ref) {\n  var _ref$className = _ref.className,\n      className = _ref$className === void 0 ? 'accordion__panel' : _ref$className,\n      region = _ref.region,\n      id = _ref.id,\n      rest = _objectWithoutProperties(_ref, _excluded$3);\n\n  var renderChildren = function renderChildren(_ref2) {\n    var panelAttributes = _ref2.panelAttributes;\n\n    if (id) {\n      assertValidHtmlId(id);\n    }\n\n    var attrs = _objectSpread2(_objectSpread2({}, panelAttributes), {}, {\n      'aria-labelledby': region ? panelAttributes['aria-labelledby'] : undefined\n    });\n\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", _extends({\n      \"data-accordion-component\": \"AccordionItemPanel\",\n      className: className\n    }, rest, attrs, {\n      role: region ? 'region' : undefined\n    }));\n  };\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Consumer$1, null, renderChildren);\n};\n\nvar AccordionItemState = function AccordionItemState(_ref) {\n  var children = _ref.children;\n\n  var renderChildren = function renderChildren(itemContext) {\n    var expanded = itemContext.expanded,\n        disabled = itemContext.disabled;\n    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children({\n      expanded: expanded,\n      disabled: disabled\n    }));\n  };\n\n  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Consumer$1, null, renderChildren);\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-accessible-accordion/dist/es/index.js\n");

/***/ })

};
;